{"version":3,"file":"js/dist/main.js","mappings":"MAQA,SAASA,EAAeC,GACf,IAAIC,GAAU,IAAOC,SAASC,qBAAqB,OAAO,GAAe,aACrEC,EAAIJ,EAAGK,wBAAwBC,IAAMC,OAAOC,YAAcP,EAC9DQ,QAAQC,IAAIN,GACZG,OAAOI,SAAS,CAACL,IAAKF,EAAGQ,SAAU,UAC5C,CAuBA,SAASC,IACDC,KAAKC,WAAWC,UAAUC,SAAS,UACnCH,KAAKC,WAAWC,UAAUE,OAAO,UAEjCJ,KAAKC,WAAWC,UAAUG,IAAI,SAEtC,CAUA,SAASC,IACL,IAAIC,EAAQnB,SAASoB,eAAe,eAChCC,EAAgBrB,SAASsB,iBAAiB,8BAiB/BtB,SAASsB,iBAAiB,wBAChCC,SAAQ,SAASC,GACtBA,EAAEV,UAAUE,OAAO,WACvB,IAlBAG,EAAML,UAAUE,OAAO,YACnBK,EAAcI,OAAS,IACvBlB,QAAQC,IAAI,wBACZW,EAAML,UAAUG,IAAI,YACpBI,EAAcE,SAAQ,SAASG,GAC3B,IAAIC,EAAcD,EAAEE,aAAa,gBACfT,EAAMG,iBAAiB,6BAA+BK,EAAc,MAC1EJ,SAAQ,SAASC,GACzBA,EAAEV,UAAUG,IAAI,WACpB,GACJ,IAER,CAhEAjB,SAAS6B,iBAAiB,oBAW1B,WACOC,SAASC,OACVxB,QAAQC,IAAI,MACZD,QAAQC,IAAIsB,SAASC,MACrBlC,EAAeG,SAASoB,eAAeU,SAASC,KAAKC,UAAU,MA6FlD,IAAIC,SAAS,CACxBC,kBAAmB,kBAKnBlC,SAASsB,iBAAiB,eACV,IAAIW,SAAS,CAC7BC,kBAAmB,aAEnBC,eAAgB,SAASrC,GACb,IAAImC,SAAS,CACrBG,UAAWtC,GAElB,IAhDeE,SAASsB,iBAAiB,mCAChCC,SAAQ,SAASc,GACvBA,EAAKR,iBAAiB,SAAS,SAASS,GACrCA,EAAEC,iBACEC,QAAQC,WACRD,QAAQC,UAAU,KAAM,KAAMJ,EAAKN,MACnClC,EAAeG,SAASoB,eAAeiB,EAAKN,KAAKC,UAAU,MAE3DF,SAASC,KAAOM,EAAKN,IAE5B,GACL,IAlEI/B,SAASoB,eAAe,gBAwB3BpB,SAASsB,iBAAiB,sBAAsBC,SAAQ,SAASG,GAC7DA,EAAEG,iBAAiB,SAASX,EAChC,IAnBAlB,SAASsB,iBAAiB,YAAYC,SAAQ,SAASmB,GACnDnC,QAAQC,IAAIkC,GACZA,EAAEzC,qBAAqB,MAAM,GAAG4B,iBAAiB,QAAQlB,EAC7D,GANJ,G","sources":["webpack://pi/./js/pi.js"],"sourcesContent":["\n/* Prevent the page from automatically going to a bit */\n\n\ndocument.addEventListener('DOMContentLoaded', startUp);\n\n\n\nfunction stickyScrollTo(el){\n         var offset = -1.2 * (document.getElementsByTagName('nav')[0].offsetHeight); \n         var y = el.getBoundingClientRect().top + window.pageYOffset + offset;\n         console.log(y);\n         window.scrollTo({top: y, behavior: 'smooth'});\n}\n\nfunction startUp(){\n   if (location.hash){\n      console.log('hi');\n      console.log(location.hash);\n      stickyScrollTo(document.getElementById(location.hash.substring(1)))\n   }\n   lazyload();\n   makeHashLinksStickyScroll();\n   if (document.getElementById('screenshots')){\n       addScreenshotFilters();\n   }\n   addBlockHideShow();\n}\n\nfunction addBlockHideShow(){\n    document.querySelectorAll('.details').forEach(function(d){\n        console.log(d);\n        d.getElementsByTagName('h3')[0].addEventListener('click',hideShowBlock);\n    });\n}\n\nfunction hideShowBlock(){\n    if (this.parentNode.classList.contains('closed')){\n        this.parentNode.classList.remove('closed');\n    } else {\n        this.parentNode.classList.add('closed');\n    }\n}\n\nfunction addScreenshotFilters(){\n    /* First, add event listener */\n    \n    document.querySelectorAll('#screenshots input').forEach(function(i){\n        i.addEventListener('change',selectScreenshots);\n    });\n}\n\nfunction selectScreenshots(){\n    var scdiv = document.getElementById('screenshots');\n    var checkedInputs = document.querySelectorAll('#screenshots input:checked');\n    removeSelectedScreenshots();\n    scdiv.classList.remove('filtered');\n    if (checkedInputs.length > 0){\n        console.log('Found checked inputs');\n        scdiv.classList.add('filtered');\n        checkedInputs.forEach(function(i){\n            var thisKeyword = i.getAttribute('data-keyword');\n            var screenshots = scdiv.querySelectorAll('.screenshot[data-keyword=\"' + thisKeyword + '\"]');\n            screenshots.forEach(function(s){\n                s.classList.add('selected');\n            });\n        });\n    }\n}\n\nfunction removeSelectedScreenshots(){\n    var selected = document.querySelectorAll('.screenshot.selected');\n    selected.forEach(function(s){\n        s.classList.remove('selected');\n    });\n}\n\nfunction makeHashLinksStickyScroll(){\n    var hashLinks = document.querySelectorAll(\"a[href^='#']:not([data-toggle])\");\n    hashLinks.forEach(function(link){\n        link.addEventListener('click', function(e){\n           e.preventDefault();\n           if (history.pushState){\n               history.pushState(null, null, link.hash);\n               stickyScrollTo(document.getElementById(link.hash.substring(1)));\n           } else {\n               location.hash = link.hash;\n           }\n        });\n   });\n}\n\n\n/* \n * Basic function for implementing lazyload for a \n * the various types of image cards that we want to\n * lazy load. We can't just instantiate a single \n * lazyload instance since there are a number of \n * horizontal scrolling containers to consider.\n * \n * This function is lifted from the lazyload documentation\n * with thanks to the authors.\n */\n\nfunction fixHeaderJump(){\n    \n}\n\nfunction lazyload(){\n    \n    \n    //Basic lazy load for the cards.\n   var lazyCards = new LazyLoad({\n        elements_selector: \"img[data-src]\"\n    });\n    \n    //And now lazy load for the panels\n    \n    if (document.querySelectorAll('.panelBody')){\n       var lazyPanels = new LazyLoad({\n        elements_selector: \".panelBody\",\n        // When the .horzContainer div enters the viewport...\n        callback_enter: function(el) {\n        var oneLL = new LazyLoad({\n            container: el\n        });\n     }\n    });\n  }\n}\n\n\nfunction goToDetails(){\n    var btns = document.querySelectorAll(\"[data-toggle='collapse']\");\n    btns.forEach(function(btn){\n        console.log(btn);\n        btn.addEventListener('click', function(){\n            var contentEl = document.getElementById(btn.getAttribute('href').substring(1));\n            var targEl = contentEl.closest('.details');\n            console.log(targEl);\n            if (this.getAttribute('aria-expanded') == 'false'){\n                targEl.scrollIntoView({'behavior': 'smooth'});\n            }\n        }\n    )});\n    \n}\nfunction makeDetailsExpandable(){\n        document.querySelectorAll('.details').forEach(function(detail){\n            var header = detail.getElementsByTagName('h3')[0];\n            header.classList.add('togglable');\n            header.addEventListener('click', toggleDetails)\n       });\n}\n\n\n\nfunction toggleDetails(){\n    console.log(this);\n   var expander = this.closest('[aria-expanded]');\n   var isOpen = (expander.getAttribute('aria-expanded') == 'true');\n   console.log(isOpen);\n   if (isOpen){\n        expander.setAttribute('aria-expanded', 'false');\n    } else {\n       expander.setAttribute('aria-expanded', 'true');\n    }\n}        \n\n"],"names":["stickyScrollTo","el","offset","document","getElementsByTagName","y","getBoundingClientRect","top","window","pageYOffset","console","log","scrollTo","behavior","hideShowBlock","this","parentNode","classList","contains","remove","add","selectScreenshots","scdiv","getElementById","checkedInputs","querySelectorAll","forEach","s","length","i","thisKeyword","getAttribute","addEventListener","location","hash","substring","LazyLoad","elements_selector","callback_enter","container","link","e","preventDefault","history","pushState","d"],"sourceRoot":""}